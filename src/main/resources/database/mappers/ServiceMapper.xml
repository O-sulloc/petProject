<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

    
<mapper namespace="com.pj.pet.service.ServiceMapper">

	<!-- 시간 당 예약한 사람 수  -->
	<select id="ResCount" parameterType="ReservationVO" resultType="Long">
	select count(*) from  RESERVATION
	where RESTIME=#{resTime} 
	and RESDATE=#{resDate}
	and NOT RESSTATE=2
	</select>


	<!-- 예약승인시 메일 보내기 -->
	<!-- reservation 테이블에서 setNum이용해서 예약자의 이메일 가져옴 -->
	<select id="findEmail" parameterType="reservationVO" resultType="userVO">
		select email from USER
		where id=(select id from RESERVATION  where RESNUM=#{resNum})	
	</select>
	
	<!-- 메일보낼때 내용에 들어갈 data들  -->
	<select id="getMailData" parameterType="reservationVO" resultType="reservationVO">
		select r.RESTIME,r.RESDATE,s.SERNAME from RESERVATION r 
		left join SERVICE s 
		using(SERNUM)
		where RESNUM =#{resNum}
	</select>
	
	<!--서비스 등록되어있는지 확인 (registration page 인터셉터 체크용)  -->
	<select id="registrationInterceptor" parameterType="UserVO" resultType="ServiceVO">
	select SERNUM from SERVICE where id=#{id}
	</select>
	
	<!-- interceptor 구별 (id로 서비스 serkind 얻어서 1,2면 서비스마이페이지 이용 가) -->
	<select id="sellerInterceptor" parameterType="UserVO" resultType="UserVO">
		SELECT ROLE from USER
		where id=#{id}
	</select>

	<!-- reservationSetting 등록되어있는지 확인하기 위해 아무거나(setnum)가져옴  -->
	<select id="getReservationSettingCheck" parameterType="UserVO" resultType="ReservationSettingVO">
		select SETNUM from RESERVATIONSETTING 
		WHERE  serNum=(SELECT SERNUM FROM SERVICE where id=#{id})
	</select>


	<!-- file update -->
	<insert id="setUpdateFile" parameterType="ServiceFileVO">
		update SERVICEFILE 
		set FILENAME=#{fileName}, ORINAME=#{oriName}
		where SERNUM=#{serNum}
	</insert>

	<!-- add reservationTime -->
	<insert id="setReservationTime" parameterType="ReservationTimeVO">
		<selectKey resultType="Long" keyProperty="setNum" order="BEFORE">
			select LAST_INSERT_ID() 
		</selectKey>
		insert into RESERVATIONTIME(SERNUM,SETNUM,TIMECASE,OPENTIME,CLOSETIME)
		values (#{serNum},#{setNum},#{timecase},#{openTime},#{closeTime})
	</insert>
	
	<!-- 예약시간 업데이트 -->
	<update id="updateReservationTime" parameterType="ReservationTimeVO">
		UPDATE RESERVATIONTIME SET
			OPENTIME=#{openTime},
			CLOSETIME=#{closeTime}
		where TIMECASE=#{timecase} and SERNUM=#{serNum}
	</update>
		
	<!-- 예약세팅 업데이트 -->
	<update id="updateReservationSetting" parameterType="ReservationSettingVO">
		update RESERVATIONSETTING SET 
			CAPACITY=#{capacity}, 
			TERM=#{term},
			HOLIDAY=#{holiday} ,
			STARTBREAKTIME=#{startBreaktime},
			ENDBREAKTIME=#{endBreaktime}
		where SERNUM=#{serNum}
	</update>
		
	
	<!--아이디로 예약세팅정보 가져오기  -->
	<select id="getReservationSetting" parameterType="UserVO" resultType="ReservationSettingVO">
		select * from RESERVATIONSETTING 
		WHERE SERNUM=(SELECT SERNUM from SERVICE WHERE ID=#{id})
	</select>
	
	<!-- 아이디로 예약시간정보 가져오기 -->
	<select id="getReservationTime" parameterType="UserVO" resultType="ReservationTimeVO">
		SELECT * from RESERVATIONTIME 
		WHERE SERNUM =(SELECT SERNUM from SERVICE WHERE ID=#{id})
	</select>
	
	
	<!-- 예약 세팅 생성 -->
	<insert id="setReservationSetting" parameterType="ReservationSettingVO">
		insert into RESERVATIONSETTING (SETNUM,SERNUM,CAPACITY,TERM,HOLIDAY,STARTBREAKTIME,ENDBREAKTIME)
		values(NULL,#{serNum},#{capacity},#{term},#{holiday},#{startBreaktime},#{endBreaktime})
	</insert>


	<!-- 파일 추가 -->
 	<insert id="setFileAdd" parameterType="ServiceFileVO">
 		<selectKey resultType="Long" keyProperty="serNum" order="BEFORE">
			select LAST_INSERT_ID() 
		</selectKey>
 		INSERT INTO SERVICEFILE (FILENUM, SERNUM, FILENAME, ORINAME)
 		VALUES(NULL, #{serNum}, #{fileName}, #{oriName})
 	</insert>
 	
 	<!-- 파일 삭제시  -->
 	<select id="getFileDetail" parameterType="ServiceVO" resultType="ServiceFileVO">
 		SELECT * FROM SERVICEFILE WHERE SERNUM=#{serNum} 
 	</select>
	
	<!-- add service -->
	<insert id="setService" parameterType="ServiceVO">
		INSERT into SERVICE
		values(NULL,#{serName},#{serTel},#{serAddress},#{hospitalField},#{homepage},#{serKind},#{id},#{serTime})
	</insert>
	
	<!-- 소비자측 service detail에서 파일이미지 정보 -->
	<select id="getService" parameterType="ServiceVO" resultMap="getDetailResult"> 
		select * from SERVICE S 
			 LEFT JOIN
				 SERVICEFILE F
				 USING (SERNUM)
		 WHERE SERNUM=#{serNum}
	</select>
	
	
	<!-- service mypage detail -->
	<select id="getDetail" parameterType="ServiceVO" resultMap="getDetailResult">
		select * from SERVICE S 
			 LEFT JOIN
				 SERVICEFILE F
				 USING (SERNUM)
		 WHERE SERNUM=(select SERNUM from SERVICE where ID=#{id})
	</select>
	
	<resultMap type="ServiceVO" id="getDetailResult">
		<id column="serNum" property="serNum"></id>
		<result column="id" property="id"/>
		<result column="serKind" property="serKind"/>
		<result column="serName" property="serName"/>
		<result column="homepage" property="homepage"/>
		<result column="serTel" property="serTel"/>
		<result column="serTime" property="serTime"/>
		<result column="hospitalField" property="hospitalField"/>
		<result column="serAddress" property="serAddress"/>
		<association property="serviceFileVO" javaType="ServiceFileVO">
			<id column="fileNum" property="fileNum"/>
			<result column="serNum" property="serNum"/>
			<result column="fileName" property="fileName"/>
			<result column="oriName" property="oriName"/>
		</association>
	</resultMap>
	
	<!-- 월별 resState count-->
	<!-- reservationVO에 아이디랑resDate 둘 다 있어서 이걸로 담아오늘걸로 -->
	<select id="getResStateCount" parameterType="ReservationVO" resultType="ReservationVO">
		select RESSTATE,count(RESNUM) AS COUNT 
		from RESERVATION
		WHERE SERNUM=(SELECT SERNUM from SERVICE WHERE ID=#{id})
		and RESDATE LIKE CONCAT('%',#{resDate},'%')
		group by RESSTATE 
	</select>

	<!-- 판매자측 서비스 예약 리스트 --><!-- 월별 -->
	<select id="getMonthReservationList" parameterType="Pager" resultMap="reservationResult">
		SELECT R.*,U.NAME,U.EMAIL,U.PHONE
		from RESERVATION R
		left join
		USER U
		using(ID)
		WHERE SERNUM=
			(SELECT SERNUM from SERVICE WHERE ID=#{id})
		and RESDATE LIKE CONCAT('%',#{resDate},'%')
		order by RESDATE DESC
		LIMIT #{startRow}, #{perPage}
		</select>
	
	<!--판매자측 서비스 예약 리스트 --><!--날짜별-->
	<select id="getDayReservationList" parameterType="Pager" resultMap="reservationResult">
		SELECT R.*,U.NAME,U.EMAIL,U.PHONE
		from RESERVATION R
		left join
		USER U
		using(ID)
		WHERE SERNUM=
			(SELECT SERNUM from SERVICE WHERE ID=#{id})
		and RESDATE =#{resDate} 
		order by RESTIME DESC
		LIMIT #{startRow}, #{perPage}
	</select>
		
	<!--판매자측 서비스 예약 리스트 --><!--최신순-->
	<select id="getReservationList" parameterType="Pager" resultMap="reservationResult">
		SELECT R.*,U.NAME,U.EMAIL,U.PHONE
		from RESERVATION R
		left join
		USER U
		using(ID)
		WHERE SERNUM=
			(SELECT SERNUM from SERVICE WHERE ID=#{id})
		ORDER BY RESNUM DESC
		LIMIT #{startRow}, #{perPage} 
	</select>
	

	<!--예약시간 지났는데 승인/거절 안한것들 거절로 변경하는 쿼리-->
	<update id="updateOverdue" parameterType="UserVO">
		update RESERVATION 
		SET RESSTATE=2
		where 
		SERNUM= (SELECT SERNUM from SERVICE WHERE ID=#{id})
		and 
		<![CDATA[
		TIMEDIFF(concat(RESDATE," ",RESTIME),(SELECT DATE_ADD(NOW(), INTERVAL 9 HOUR)))<0 	
		]]> 
		and RESSTATE=0
	</update>
	 
	
	<!--예약날짜,예약시간이 현재시간보다 전이고 예약 승인 된 것들(방문 확인 체크용)-->
	<!--mysql 현재시간 +9로 계산됨-->
	  <select id="getOverdue" parameterType="Pager" resultMap="reservationResult">
		SELECT R.*,U.NAME,U.EMAIL,U.PHONE 
		from RESERVATION R
		left join
		USER U
		using(ID)
		where
			SERNUM= (SELECT SERNUM from SERVICE WHERE ID=#{id})
			and 
			 <![CDATA[
		 		TIMESTAMPDIFF(MINUTE,concat(RESDATE," ",RESTIME),(SELECT DATE_ADD(NOW(), INTERVAL 9 HOUR)))>0
			]]> 
			and RESSTATE=1
		ORDER BY RESNUM DESC
		LIMIT #{startRow}, #{perPage} 
	  </select>
	  	<!-- 
		and TIMEDIFF(RESTIME,(select DATE_FORMAT(SYSDATE(), '%H:%i:%s')))<=0 -->
	
	<!--판매자측 서비스 예약 리스트 --><!-- 대기중인 예약만 -->
	<select id="getResStateIs0" parameterType="Pager" resultMap="reservationResult">
			SELECT R.*,U.NAME,U.EMAIL,U.PHONE
		from RESERVATION R
		left join
		USER U
		using(ID)
		WHERE SERNUM=
			(SELECT SERNUM from SERVICE WHERE ID=#{id})
			and RESSTATE =0
		ORDER BY RESNUM DESC
		LIMIT #{startRow}, #{perPage} 
		</select>
	
	<resultMap type="UserVO" id="reservationResult">
		<id column="id" property="id"/>
		<result column="name" property="name"/>
		<result column="email" property="email"/>
		<result column="phone" property="phone"/>
		<association property="reservationVO" javaType="ReservationVO">
			<id column="resNum" property="resNum"></id>
			<result column="id" property="id"/>
			<result column="serNum" property="serNum"/>
			<result column="resDate" property="resDate"/>
			<result column="resMemo" property="resMemo"/>
			<result column="resState" property="resState"/>
			<result column="resTime" property="resTime"/>
		</association>
	</resultMap>

	
	<select id="getTotalCount" parameterType="Pager" resultType="Long">
		SELECT COUNT(RESNUM)
		from RESERVATION R
		left join
		USER U
		using(ID)
		WHERE SERNUM=
			(SELECT SERNUM from SERVICE WHERE ID=#{id})
		ORDER BY RESNUM DESC
	</select>
	
	<!--예약상태 변경하기  -->
	<update id="setUpdateResState" parameterType="ReservationVO">
		update RESERVATION 
		set RESSTATE=#{resState}
		where RESNUM=#{resNum}
	</update>
	
	<!--id 받아서 예약세팅 정보 가져오기 (예약시간 띄워주기용), 파일보여주기-->
	<select id="getAllReservationSetting" parameterType="ServiceVO" resultMap="getAllReservationSettingResult">
		select * from RESERVATIONSETTING S
			LEFT JOIN
				RESERVATIONTIME T
				USING (SETNUM)
			WHERE S.SERNUM=#{serNum}
	</select>
	<resultMap type="ReservationSettingVO" id="getAllReservationSettingResult">
		<id column="setNum" property="setNum"></id>
		<result column="serNum" property="serNum"/>
		<result column="term" property="term"/>
		<result column="capacity" property="capacity"/>
		<result column="startBreakTime" property="startBreaktime"/>
		<result column="endBreakTime" property="endBreaktime"/>
		<result column="holiday" property="holiday"/>
		<collection property="reservationTimeVO" ofType="ReservationTimeVO">
			<result column="serNum" property="serNum"/>
			<result column="setNum" property="setNum"/>
			<result column="openTime" property="openTime"/>
			<result column="closeTime" property="closeTime"/>
			<result column="timecase" property="timecase"/>
		</collection>
	</resultMap>

	
	<!-- service my page update-->
	<update id="setUpdate" parameterType="ServiceVO">
		update SERVICE set
		SERTEL=#{serTel},
		HOSPITALFIELD=#{hospitalField},
		SERADDRESS=#{serAddress},
		HOMEPAGE=#{homepage},
		SERTIME=#{serTime}
		where id=#{id}
	</update>
	
	
	<!-- 병원/샵 삭제 -->
	<delete id="setDelete" parameterType="ServiceVO">
		DELETE FROM SERVICE WHERE SERNUM=#{serNum}
	</delete>
	
	
	<!-- ====================== -->
	
	<!-- serKind 1 병원/ 2 미용실-->
	<select id="getListc" parameterType="Pager" resultType="ServiceVO">
		SELECT * FROM SERVICE
		WHERE SERKIND=#{serKind} AND SERNUM>0
		AND
		<choose>
			<when test="kind=='col1'">
				SERNAME
			</when>
			<when test="kind=='col2'">
				SERADDRESS
			</when>
			<otherwise>
				SERTEL
			</otherwise>
		</choose>
		LIKE CONCAT('%',#{search},'%')
		ORDER BY SERNUM DESC
		LIMIT
		#{startRow},#{perPage}
	</select>

	
	
	<select id="total" resultType="Long" parameterType="Pager">
		SELECT COUNT(SERNUM) FROM SERVICE
		WHERE SERNUM>0
		AND
		<choose>
			<when test="kind=='col1'">
				SERNAME
			</when>
			<when test="kind =='col2'">
				SERADDRESS
			</when>
			<otherwise>
				SERTEL
			</otherwise>
		</choose>
		LIKE CONCAT('%',#{search},'%')
	</select>
	
	<select id="getDetailc" parameterType="ServiceVO" resultType="ServiceVO">
		SELECT * FROM SERVICE WHERE SERNUM=#{serNum}
	</select>


</mapper>